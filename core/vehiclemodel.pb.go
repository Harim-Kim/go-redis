//
//howto ? Windows
//(1) Go Stub generation
//protoc  -I. -I%GOPATH%/src -I%GOPATH%/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis  --go_out=plugins=grpc:. vehiclemodel.proto
//(2) Reverse proxy generation
//protoc  -I. -I%GOPATH%/src -I%GOPATH%/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis  --grpc-gateway_out=logtostderr=true:.  vehiclemodel.proto
//(3) Swagger file genneration
//protoc  -I. -I%GOPATH%/src -I%GOPATH%/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis --swagger_out=logtostderr=true:. vehiclemodel.proto
//
//howto ? Linux
//(1) Go Stub generation
//protoc  -I. -I$GOPATH/src -I$GOPATH/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis  --go_out=plugins=grpc:. vehiclemodel.proto
//(2) Reverse proxy generation
//protoc  -I. -I$GOPATH/src -I$GOPATH/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis  --grpc-gateway_out=logtostderr=true:.  vehiclemodel.proto
//(3) Swagger file genneration
//protoc  -I. -I$GOPATH/src -I$GOPATH/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis --swagger_out=logtostderr=true:. vehiclemodel.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: vehiclemodel.proto

package thisisanexample

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VehicleModelGrade int32

const (
	VehicleModelGrade_X_UNKNOWN   VehicleModelGrade = 0
	VehicleModelGrade_CITY_CAR    VehicleModelGrade = 10
	VehicleModelGrade_SUB_COMPACT VehicleModelGrade = 20
	VehicleModelGrade_COMPACT     VehicleModelGrade = 30
	VehicleModelGrade_MID_SIZE    VehicleModelGrade = 40
	VehicleModelGrade_LARGE_SIZE  VehicleModelGrade = 50
	VehicleModelGrade_SUV         VehicleModelGrade = 60
	VehicleModelGrade_VAN         VehicleModelGrade = 70
	VehicleModelGrade_ELECTRIC    VehicleModelGrade = 80
	VehicleModelGrade_OVERSEA     VehicleModelGrade = 90
)

// Enum value maps for VehicleModelGrade.
var (
	VehicleModelGrade_name = map[int32]string{
		0:  "X_UNKNOWN",
		10: "CITY_CAR",
		20: "SUB_COMPACT",
		30: "COMPACT",
		40: "MID_SIZE",
		50: "LARGE_SIZE",
		60: "SUV",
		70: "VAN",
		80: "ELECTRIC",
		90: "OVERSEA",
	}
	VehicleModelGrade_value = map[string]int32{
		"X_UNKNOWN":   0,
		"CITY_CAR":    10,
		"SUB_COMPACT": 20,
		"COMPACT":     30,
		"MID_SIZE":    40,
		"LARGE_SIZE":  50,
		"SUV":         60,
		"VAN":         70,
		"ELECTRIC":    80,
		"OVERSEA":     90,
	}
)

func (x VehicleModelGrade) Enum() *VehicleModelGrade {
	p := new(VehicleModelGrade)
	*p = x
	return p
}

func (x VehicleModelGrade) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VehicleModelGrade) Descriptor() protoreflect.EnumDescriptor {
	return file_vehiclemodel_proto_enumTypes[0].Descriptor()
}

func (VehicleModelGrade) Type() protoreflect.EnumType {
	return &file_vehiclemodel_proto_enumTypes[0]
}

func (x VehicleModelGrade) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VehicleModelGrade.Descriptor instead.
func (VehicleModelGrade) EnumDescriptor() ([]byte, []int) {
	return file_vehiclemodel_proto_rawDescGZIP(), []int{0}
}

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalRecord uint64 `protobuf:"varint,1,opt,name=totalRecord,proto3" json:"totalRecord,omitempty"`
	TotalPage   uint64 `protobuf:"varint,2,opt,name=totalPage,proto3" json:"totalPage,omitempty"`
	Offset      uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit       uint64 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Page        uint64 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PrevPage    uint64 `protobuf:"varint,6,opt,name=prevPage,proto3" json:"prevPage,omitempty"`
	NextPage    uint64 `protobuf:"varint,7,opt,name=nextPage,proto3" json:"nextPage,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehiclemodel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vehiclemodel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_vehiclemodel_proto_rawDescGZIP(), []int{0}
}

func (x *PageInfo) GetTotalRecord() uint64 {
	if x != nil {
		return x.TotalRecord
	}
	return 0
}

func (x *PageInfo) GetTotalPage() uint64 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *PageInfo) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PageInfo) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PageInfo) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfo) GetPrevPage() uint64 {
	if x != nil {
		return x.PrevPage
	}
	return 0
}

func (x *PageInfo) GetNextPage() uint64 {
	if x != nil {
		return x.NextPage
	}
	return 0
}

type GetVehicleModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               string            `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name             string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Brand            string            `protobuf:"bytes,7,opt,name=brand,proto3" json:"brand,omitempty"`
	Standard         bool              `protobuf:"varint,12,opt,name=standard,proto3" json:"standard,omitempty"`
	StandardModelID  string            `protobuf:"bytes,13,opt,name=standardModelID,proto3" json:"standardModelID,omitempty"`
	SeatingCapacity  uint32            `protobuf:"varint,3,opt,name=seatingCapacity,proto3" json:"seatingCapacity,omitempty"`
	FuelType         string            `protobuf:"bytes,4,opt,name=fuelType,proto3" json:"fuelType,omitempty"`
	FuelEfficiency   float32           `protobuf:"fixed32,14,opt,name=fuelEfficiency,proto3" json:"fuelEfficiency,omitempty"`
	FuelTankCapacity uint32            `protobuf:"varint,6,opt,name=fuelTankCapacity,proto3" json:"fuelTankCapacity,omitempty"`
	Displacement     uint32            `protobuf:"varint,5,opt,name=displacement,proto3" json:"displacement,omitempty"`
	Grade            VehicleModelGrade `protobuf:"varint,11,opt,name=grade,proto3,enum=core.VehicleModelGrade" json:"grade,omitempty"`
	WarmUpTime       uint32            `protobuf:"varint,15,opt,name=warmUpTime,proto3" json:"warmUpTime,omitempty"`
	ImageURL         string            `protobuf:"bytes,8,opt,name=imageURL,proto3" json:"imageURL,omitempty"`
	CreatedAt        int64             `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt        int64             `protobuf:"varint,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *GetVehicleModelResponse) Reset() {
	*x = GetVehicleModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehiclemodel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVehicleModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVehicleModelResponse) ProtoMessage() {}

func (x *GetVehicleModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vehiclemodel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVehicleModelResponse.ProtoReflect.Descriptor instead.
func (*GetVehicleModelResponse) Descriptor() ([]byte, []int) {
	return file_vehiclemodel_proto_rawDescGZIP(), []int{1}
}

func (x *GetVehicleModelResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *GetVehicleModelResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetVehicleModelResponse) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *GetVehicleModelResponse) GetStandard() bool {
	if x != nil {
		return x.Standard
	}
	return false
}

func (x *GetVehicleModelResponse) GetStandardModelID() string {
	if x != nil {
		return x.StandardModelID
	}
	return ""
}

func (x *GetVehicleModelResponse) GetSeatingCapacity() uint32 {
	if x != nil {
		return x.SeatingCapacity
	}
	return 0
}

func (x *GetVehicleModelResponse) GetFuelType() string {
	if x != nil {
		return x.FuelType
	}
	return ""
}

func (x *GetVehicleModelResponse) GetFuelEfficiency() float32 {
	if x != nil {
		return x.FuelEfficiency
	}
	return 0
}

func (x *GetVehicleModelResponse) GetFuelTankCapacity() uint32 {
	if x != nil {
		return x.FuelTankCapacity
	}
	return 0
}

func (x *GetVehicleModelResponse) GetDisplacement() uint32 {
	if x != nil {
		return x.Displacement
	}
	return 0
}

func (x *GetVehicleModelResponse) GetGrade() VehicleModelGrade {
	if x != nil {
		return x.Grade
	}
	return VehicleModelGrade_X_UNKNOWN
}

func (x *GetVehicleModelResponse) GetWarmUpTime() uint32 {
	if x != nil {
		return x.WarmUpTime
	}
	return 0
}

func (x *GetVehicleModelResponse) GetImageURL() string {
	if x != nil {
		return x.ImageURL
	}
	return ""
}

func (x *GetVehicleModelResponse) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetVehicleModelResponse) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetVehicleSimpleModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Brand    string `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	FuelType string `protobuf:"bytes,4,opt,name=fuelType,proto3" json:"fuelType,omitempty"`
}

func (x *GetVehicleSimpleModelResponse) Reset() {
	*x = GetVehicleSimpleModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehiclemodel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVehicleSimpleModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVehicleSimpleModelResponse) ProtoMessage() {}

func (x *GetVehicleSimpleModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vehiclemodel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVehicleSimpleModelResponse.ProtoReflect.Descriptor instead.
func (*GetVehicleSimpleModelResponse) Descriptor() ([]byte, []int) {
	return file_vehiclemodel_proto_rawDescGZIP(), []int{2}
}

func (x *GetVehicleSimpleModelResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *GetVehicleSimpleModelResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetVehicleSimpleModelResponse) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *GetVehicleSimpleModelResponse) GetFuelType() string {
	if x != nil {
		return x.FuelType
	}
	return ""
}

type RegisterVehicleModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Standard         bool              `protobuf:"varint,11,opt,name=standard,proto3" json:"standard,omitempty"`
	StandardModelID  string            `protobuf:"bytes,12,opt,name=standardModelID,proto3" json:"standardModelID,omitempty"`
	Name             string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Brand            string            `protobuf:"bytes,6,opt,name=brand,proto3" json:"brand,omitempty"`
	SeatingCapacity  uint32            `protobuf:"varint,2,opt,name=seatingCapacity,proto3" json:"seatingCapacity,omitempty"`
	FuelType         string            `protobuf:"bytes,3,opt,name=fuelType,proto3" json:"fuelType,omitempty"`
	FuelEfficiency   float32           `protobuf:"fixed32,8,opt,name=fuelEfficiency,proto3" json:"fuelEfficiency,omitempty"`
	FuelTankCapacity uint32            `protobuf:"varint,5,opt,name=fuelTankCapacity,proto3" json:"fuelTankCapacity,omitempty"`
	Displacement     uint32            `protobuf:"varint,4,opt,name=displacement,proto3" json:"displacement,omitempty"`
	Grade            VehicleModelGrade `protobuf:"varint,9,opt,name=grade,proto3,enum=core.VehicleModelGrade" json:"grade,omitempty"`
	WarnUpTime       uint32            `protobuf:"varint,10,opt,name=warnUpTime,proto3" json:"warnUpTime,omitempty"`
	ImageURL         string            `protobuf:"bytes,7,opt,name=imageURL,proto3" json:"imageURL,omitempty"`
}

func (x *RegisterVehicleModelRequest) Reset() {
	*x = RegisterVehicleModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehiclemodel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterVehicleModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterVehicleModelRequest) ProtoMessage() {}

func (x *RegisterVehicleModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vehiclemodel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterVehicleModelRequest.ProtoReflect.Descriptor instead.
func (*RegisterVehicleModelRequest) Descriptor() ([]byte, []int) {
	return file_vehiclemodel_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterVehicleModelRequest) GetStandard() bool {
	if x != nil {
		return x.Standard
	}
	return false
}

func (x *RegisterVehicleModelRequest) GetStandardModelID() string {
	if x != nil {
		return x.StandardModelID
	}
	return ""
}

func (x *RegisterVehicleModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterVehicleModelRequest) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *RegisterVehicleModelRequest) GetSeatingCapacity() uint32 {
	if x != nil {
		return x.SeatingCapacity
	}
	return 0
}

func (x *RegisterVehicleModelRequest) GetFuelType() string {
	if x != nil {
		return x.FuelType
	}
	return ""
}

func (x *RegisterVehicleModelRequest) GetFuelEfficiency() float32 {
	if x != nil {
		return x.FuelEfficiency
	}
	return 0
}

func (x *RegisterVehicleModelRequest) GetFuelTankCapacity() uint32 {
	if x != nil {
		return x.FuelTankCapacity
	}
	return 0
}

func (x *RegisterVehicleModelRequest) GetDisplacement() uint32 {
	if x != nil {
		return x.Displacement
	}
	return 0
}

func (x *RegisterVehicleModelRequest) GetGrade() VehicleModelGrade {
	if x != nil {
		return x.Grade
	}
	return VehicleModelGrade_X_UNKNOWN
}

func (x *RegisterVehicleModelRequest) GetWarnUpTime() uint32 {
	if x != nil {
		return x.WarnUpTime
	}
	return 0
}

func (x *RegisterVehicleModelRequest) GetImageURL() string {
	if x != nil {
		return x.ImageURL
	}
	return ""
}

type UpdateVehicleModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateMask       *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	ID               string                 `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Standard         bool                   `protobuf:"varint,10,opt,name=standard,proto3" json:"standard,omitempty"`
	StandardModelID  string                 `protobuf:"bytes,11,opt,name=standardModelID,proto3" json:"standardModelID,omitempty"`
	Name             string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Brand            string                 `protobuf:"bytes,8,opt,name=brand,proto3" json:"brand,omitempty"`
	SeatingCapacity  uint32                 `protobuf:"varint,4,opt,name=seatingCapacity,proto3" json:"seatingCapacity,omitempty"`
	FuelType         string                 `protobuf:"bytes,5,opt,name=fuelType,proto3" json:"fuelType,omitempty"`
	FuelEfficiency   float32                `protobuf:"fixed32,12,opt,name=fuelEfficiency,proto3" json:"fuelEfficiency,omitempty"`
	FuelTankCapacity uint32                 `protobuf:"varint,7,opt,name=fuelTankCapacity,proto3" json:"fuelTankCapacity,omitempty"`
	Displacement     uint32                 `protobuf:"varint,6,opt,name=displacement,proto3" json:"displacement,omitempty"`
	Grade            VehicleModelGrade      `protobuf:"varint,13,opt,name=grade,proto3,enum=core.VehicleModelGrade" json:"grade,omitempty"`
	WarmUpTime       uint32                 `protobuf:"varint,14,opt,name=warmUpTime,proto3" json:"warmUpTime,omitempty"`
	ImageURL         string                 `protobuf:"bytes,9,opt,name=imageURL,proto3" json:"imageURL,omitempty"`
}

func (x *UpdateVehicleModelRequest) Reset() {
	*x = UpdateVehicleModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehiclemodel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVehicleModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVehicleModelRequest) ProtoMessage() {}

func (x *UpdateVehicleModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vehiclemodel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVehicleModelRequest.ProtoReflect.Descriptor instead.
func (*UpdateVehicleModelRequest) Descriptor() ([]byte, []int) {
	return file_vehiclemodel_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateVehicleModelRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateVehicleModelRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateVehicleModelRequest) GetStandard() bool {
	if x != nil {
		return x.Standard
	}
	return false
}

func (x *UpdateVehicleModelRequest) GetStandardModelID() string {
	if x != nil {
		return x.StandardModelID
	}
	return ""
}

func (x *UpdateVehicleModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateVehicleModelRequest) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *UpdateVehicleModelRequest) GetSeatingCapacity() uint32 {
	if x != nil {
		return x.SeatingCapacity
	}
	return 0
}

func (x *UpdateVehicleModelRequest) GetFuelType() string {
	if x != nil {
		return x.FuelType
	}
	return ""
}

func (x *UpdateVehicleModelRequest) GetFuelEfficiency() float32 {
	if x != nil {
		return x.FuelEfficiency
	}
	return 0
}

func (x *UpdateVehicleModelRequest) GetFuelTankCapacity() uint32 {
	if x != nil {
		return x.FuelTankCapacity
	}
	return 0
}

func (x *UpdateVehicleModelRequest) GetDisplacement() uint32 {
	if x != nil {
		return x.Displacement
	}
	return 0
}

func (x *UpdateVehicleModelRequest) GetGrade() VehicleModelGrade {
	if x != nil {
		return x.Grade
	}
	return VehicleModelGrade_X_UNKNOWN
}

func (x *UpdateVehicleModelRequest) GetWarmUpTime() uint32 {
	if x != nil {
		return x.WarmUpTime
	}
	return 0
}

func (x *UpdateVehicleModelRequest) GetImageURL() string {
	if x != nil {
		return x.ImageURL
	}
	return ""
}

type VehicleModelID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *VehicleModelID) Reset() {
	*x = VehicleModelID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehiclemodel_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleModelID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleModelID) ProtoMessage() {}

func (x *VehicleModelID) ProtoReflect() protoreflect.Message {
	mi := &file_vehiclemodel_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleModelID.ProtoReflect.Descriptor instead.
func (*VehicleModelID) Descriptor() ([]byte, []int) {
	return file_vehiclemodel_proto_rawDescGZIP(), []int{5}
}

func (x *VehicleModelID) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

// Vehicle Model List
type VehicleModelList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VehicleModels []*GetVehicleModelResponse `protobuf:"bytes,1,rep,name=VehicleModels,proto3" json:"VehicleModels,omitempty"`
	PageInfo      *PageInfo                  `protobuf:"bytes,2,opt,name=pageInfo,proto3" json:"pageInfo,omitempty"`
}

func (x *VehicleModelList) Reset() {
	*x = VehicleModelList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehiclemodel_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleModelList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleModelList) ProtoMessage() {}

func (x *VehicleModelList) ProtoReflect() protoreflect.Message {
	mi := &file_vehiclemodel_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleModelList.ProtoReflect.Descriptor instead.
func (*VehicleModelList) Descriptor() ([]byte, []int) {
	return file_vehiclemodel_proto_rawDescGZIP(), []int{6}
}

func (x *VehicleModelList) GetVehicleModels() []*GetVehicleModelResponse {
	if x != nil {
		return x.VehicleModels
	}
	return nil
}

func (x *VehicleModelList) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type CountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListCount uint64 `protobuf:"varint,1,opt,name=listCount,proto3" json:"listCount,omitempty"`
}

func (x *CountResponse) Reset() {
	*x = CountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehiclemodel_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountResponse) ProtoMessage() {}

func (x *CountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vehiclemodel_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountResponse.ProtoReflect.Descriptor instead.
func (*CountResponse) Descriptor() ([]byte, []int) {
	return file_vehiclemodel_proto_rawDescGZIP(), []int{7}
}

func (x *CountResponse) GetListCount() uint64 {
	if x != nil {
		return x.ListCount
	}
	return 0
}

type VehiclemodelImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ImageBytes []byte `protobuf:"bytes,2,opt,name=ImageBytes,proto3" json:"ImageBytes,omitempty"`
}

func (x *VehiclemodelImage) Reset() {
	*x = VehiclemodelImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehiclemodel_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclemodelImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclemodelImage) ProtoMessage() {}

func (x *VehiclemodelImage) ProtoReflect() protoreflect.Message {
	mi := &file_vehiclemodel_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclemodelImage.ProtoReflect.Descriptor instead.
func (*VehiclemodelImage) Descriptor() ([]byte, []int) {
	return file_vehiclemodel_proto_rawDescGZIP(), []int{8}
}

func (x *VehiclemodelImage) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *VehiclemodelImage) GetImageBytes() []byte {
	if x != nil {
		return x.ImageBytes
	}
	return nil
}

type VehicleModelFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs        []string `protobuf:"bytes,1,rep,name=IDs,proto3" json:"IDs,omitempty"`             // 모델 ID[]
	Brand      string   `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`         // 제조사
	Brands     []string `protobuf:"bytes,3,rep,name=brands,proto3" json:"brands,omitempty"`       // 제조사[]
	Name       string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`           // 모델명
	FuelType   string   `protobuf:"bytes,5,opt,name=fuelType,proto3" json:"fuelType,omitempty"`   // 연료 유형
	FuelTypes  []string `protobuf:"bytes,6,rep,name=fuelTypes,proto3" json:"fuelTypes,omitempty"` // 연료 유형[]
	Grade      string   `protobuf:"bytes,7,opt,name=grade,proto3" json:"grade,omitempty"`         // 차량 등급
	Grades     []string `protobuf:"bytes,8,rep,name=grades,proto3" json:"grades,omitempty"`       // 차량 등급[]
	Page       uint64   `protobuf:"varint,9,opt,name=page,proto3" json:"page,omitempty"`
	RowPerPage uint64   `protobuf:"varint,10,opt,name=rowPerPage,proto3" json:"rowPerPage,omitempty"`
	SortField  uint64   `protobuf:"varint,11,opt,name=sortField,proto3" json:"sortField,omitempty"`
	SortOrder  uint64   `protobuf:"varint,12,opt,name=sortOrder,proto3" json:"sortOrder,omitempty"`
	SortFields []uint64 `protobuf:"varint,13,rep,packed,name=sortFields,proto3" json:"sortFields,omitempty"`
	SortOrders []uint64 `protobuf:"varint,14,rep,packed,name=SortOrders,proto3" json:"SortOrders,omitempty"`
}

func (x *VehicleModelFilter) Reset() {
	*x = VehicleModelFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehiclemodel_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleModelFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleModelFilter) ProtoMessage() {}

func (x *VehicleModelFilter) ProtoReflect() protoreflect.Message {
	mi := &file_vehiclemodel_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleModelFilter.ProtoReflect.Descriptor instead.
func (*VehicleModelFilter) Descriptor() ([]byte, []int) {
	return file_vehiclemodel_proto_rawDescGZIP(), []int{9}
}

func (x *VehicleModelFilter) GetIDs() []string {
	if x != nil {
		return x.IDs
	}
	return nil
}

func (x *VehicleModelFilter) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *VehicleModelFilter) GetBrands() []string {
	if x != nil {
		return x.Brands
	}
	return nil
}

func (x *VehicleModelFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VehicleModelFilter) GetFuelType() string {
	if x != nil {
		return x.FuelType
	}
	return ""
}

func (x *VehicleModelFilter) GetFuelTypes() []string {
	if x != nil {
		return x.FuelTypes
	}
	return nil
}

func (x *VehicleModelFilter) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *VehicleModelFilter) GetGrades() []string {
	if x != nil {
		return x.Grades
	}
	return nil
}

func (x *VehicleModelFilter) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *VehicleModelFilter) GetRowPerPage() uint64 {
	if x != nil {
		return x.RowPerPage
	}
	return 0
}

func (x *VehicleModelFilter) GetSortField() uint64 {
	if x != nil {
		return x.SortField
	}
	return 0
}

func (x *VehicleModelFilter) GetSortOrder() uint64 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

func (x *VehicleModelFilter) GetSortFields() []uint64 {
	if x != nil {
		return x.SortFields
	}
	return nil
}

func (x *VehicleModelFilter) GetSortOrders() []uint64 {
	if x != nil {
		return x.SortOrders
	}
	return nil
}

type ListVehicleModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 필터
	Filter *VehicleModelFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListVehicleModelRequest) Reset() {
	*x = ListVehicleModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehiclemodel_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVehicleModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVehicleModelRequest) ProtoMessage() {}

func (x *ListVehicleModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vehiclemodel_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVehicleModelRequest.ProtoReflect.Descriptor instead.
func (*ListVehicleModelRequest) Descriptor() ([]byte, []int) {
	return file_vehiclemodel_proto_rawDescGZIP(), []int{10}
}

func (x *ListVehicleModelRequest) GetFilter() *VehicleModelFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

var File_vehiclemodel_proto protoreflect.FileDescriptor

var file_vehiclemodel_proto_rawDesc = []byte{
	0x0a, 0x12, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x01, 0x0a, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76,
	0x50, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x22, 0xfe, 0x03, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f,
	0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x75, 0x65, 0x6c, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x66, 0x75, 0x65, 0x6c,
	0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x75,
	0x65, 0x6c, 0x54, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x61, 0x6e, 0x6b, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x61, 0x72,
	0x6d, 0x55, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x77,
	0x61, 0x72, 0x6d, 0x55, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x75, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb6, 0x03, 0x0a, 0x1b, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x66, 0x75, 0x65, 0x6c, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x66, 0x75, 0x65, 0x6c, 0x45, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x61,
	0x6e, 0x6b, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x05,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x61, 0x72, 0x6e, 0x55, 0x70, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x77, 0x61, 0x72, 0x6e, 0x55,
	0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52,
	0x4c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52,
	0x4c, 0x22, 0x81, 0x04, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x75, 0x65, 0x6c, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x66, 0x75, 0x65, 0x6c,
	0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x75,
	0x65, 0x6c, 0x54, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x61, 0x6e, 0x6b, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x61, 0x72,
	0x6d, 0x55, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x77,
	0x61, 0x72, 0x6d, 0x55, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x52, 0x4c, 0x22, 0x20, 0x0a, 0x0e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x83, 0x01, 0x0a, 0x10, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0d,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x12, 0x2a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2d, 0x0a,
	0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x11,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x22, 0x80, 0x03, 0x0a, 0x12, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x49, 0x44, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x75, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x75, 0x65,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x6f, 0x77, 0x50,
	0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x6f,
	0x77, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x22, 0x4b, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x2a, 0x99, 0x01, 0x0a, 0x11, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x58, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x43,
	0x41, 0x52, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x55, 0x42, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x41, 0x43, 0x54, 0x10, 0x14, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x43, 0x54,
	0x10, 0x1e, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x49, 0x44, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x10, 0x28,
	0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x10, 0x32,
	0x12, 0x07, 0x0a, 0x03, 0x53, 0x55, 0x56, 0x10, 0x3c, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x41, 0x4e,
	0x10, 0x46, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x52, 0x49, 0x43, 0x10, 0x50,
	0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x56, 0x45, 0x52, 0x53, 0x45, 0x41, 0x10, 0x5a, 0x32, 0xa6, 0x05,
	0x0a, 0x13, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x21, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x1a, 0x1d, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x20, 0x5a, 0x1e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68,
	0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x2f, 0x74, 0x68, 0x69, 0x73, 0x69, 0x73, 0x61,
	0x6e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vehiclemodel_proto_rawDescOnce sync.Once
	file_vehiclemodel_proto_rawDescData = file_vehiclemodel_proto_rawDesc
)

func file_vehiclemodel_proto_rawDescGZIP() []byte {
	file_vehiclemodel_proto_rawDescOnce.Do(func() {
		file_vehiclemodel_proto_rawDescData = protoimpl.X.CompressGZIP(file_vehiclemodel_proto_rawDescData)
	})
	return file_vehiclemodel_proto_rawDescData
}

var file_vehiclemodel_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_vehiclemodel_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_vehiclemodel_proto_goTypes = []interface{}{
	(VehicleModelGrade)(0),                // 0: core.VehicleModelGrade
	(*PageInfo)(nil),                      // 1: core.PageInfo
	(*GetVehicleModelResponse)(nil),       // 2: core.GetVehicleModelResponse
	(*GetVehicleSimpleModelResponse)(nil), // 3: core.GetVehicleSimpleModelResponse
	(*RegisterVehicleModelRequest)(nil),   // 4: core.RegisterVehicleModelRequest
	(*UpdateVehicleModelRequest)(nil),     // 5: core.UpdateVehicleModelRequest
	(*VehicleModelID)(nil),                // 6: core.VehicleModelID
	(*VehicleModelList)(nil),              // 7: core.VehicleModelList
	(*CountResponse)(nil),                 // 8: core.CountResponse
	(*VehiclemodelImage)(nil),             // 9: core.VehiclemodelImage
	(*VehicleModelFilter)(nil),            // 10: core.VehicleModelFilter
	(*ListVehicleModelRequest)(nil),       // 11: core.ListVehicleModelRequest
	(*fieldmaskpb.FieldMask)(nil),         // 12: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),                 // 13: google.protobuf.Empty
}
var file_vehiclemodel_proto_depIdxs = []int32{
	0,  // 0: core.GetVehicleModelResponse.grade:type_name -> core.VehicleModelGrade
	0,  // 1: core.RegisterVehicleModelRequest.grade:type_name -> core.VehicleModelGrade
	12, // 2: core.UpdateVehicleModelRequest.update_mask:type_name -> google.protobuf.FieldMask
	0,  // 3: core.UpdateVehicleModelRequest.grade:type_name -> core.VehicleModelGrade
	2,  // 4: core.VehicleModelList.VehicleModels:type_name -> core.GetVehicleModelResponse
	1,  // 5: core.VehicleModelList.pageInfo:type_name -> core.PageInfo
	10, // 6: core.ListVehicleModelRequest.filter:type_name -> core.VehicleModelFilter
	4,  // 7: core.VehiclemodelService.RegisterVehicleModel:input_type -> core.RegisterVehicleModelRequest
	9,  // 8: core.VehiclemodelService.RegisterImage:input_type -> core.VehiclemodelImage
	6,  // 9: core.VehiclemodelService.GetImage:input_type -> core.VehicleModelID
	6,  // 10: core.VehiclemodelService.GetVehicleModel:input_type -> core.VehicleModelID
	6,  // 11: core.VehiclemodelService.GetVehicleSimpleModel:input_type -> core.VehicleModelID
	11, // 12: core.VehiclemodelService.ListVehicleModel:input_type -> core.ListVehicleModelRequest
	5,  // 13: core.VehiclemodelService.UpdateVehicleModel:input_type -> core.UpdateVehicleModelRequest
	6,  // 14: core.VehiclemodelService.DeleteVehicleModel:input_type -> core.VehicleModelID
	13, // 15: core.VehiclemodelService.CountVehicleModel:input_type -> google.protobuf.Empty
	6,  // 16: core.VehiclemodelService.RegisterVehicleModel:output_type -> core.VehicleModelID
	13, // 17: core.VehiclemodelService.RegisterImage:output_type -> google.protobuf.Empty
	9,  // 18: core.VehiclemodelService.GetImage:output_type -> core.VehiclemodelImage
	2,  // 19: core.VehiclemodelService.GetVehicleModel:output_type -> core.GetVehicleModelResponse
	3,  // 20: core.VehiclemodelService.GetVehicleSimpleModel:output_type -> core.GetVehicleSimpleModelResponse
	7,  // 21: core.VehiclemodelService.ListVehicleModel:output_type -> core.VehicleModelList
	2,  // 22: core.VehiclemodelService.UpdateVehicleModel:output_type -> core.GetVehicleModelResponse
	13, // 23: core.VehiclemodelService.DeleteVehicleModel:output_type -> google.protobuf.Empty
	8,  // 24: core.VehiclemodelService.CountVehicleModel:output_type -> core.CountResponse
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_vehiclemodel_proto_init() }
func file_vehiclemodel_proto_init() {
	if File_vehiclemodel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vehiclemodel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehiclemodel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVehicleModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehiclemodel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVehicleSimpleModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehiclemodel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterVehicleModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehiclemodel_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVehicleModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehiclemodel_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleModelID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehiclemodel_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleModelList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehiclemodel_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehiclemodel_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclemodelImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehiclemodel_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleModelFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehiclemodel_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVehicleModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vehiclemodel_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vehiclemodel_proto_goTypes,
		DependencyIndexes: file_vehiclemodel_proto_depIdxs,
		EnumInfos:         file_vehiclemodel_proto_enumTypes,
		MessageInfos:      file_vehiclemodel_proto_msgTypes,
	}.Build()
	File_vehiclemodel_proto = out.File
	file_vehiclemodel_proto_rawDesc = nil
	file_vehiclemodel_proto_goTypes = nil
	file_vehiclemodel_proto_depIdxs = nil
}
